name: phonehome-development
services:
    database:
        image: postgres:14.19-alpine
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", $DB_DATABASE, "-U", $DB_USERNAME ]
        ports:
            - "5432:5432"
        volumes:
            - database:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: $DB_DATABASE
            POSTGRES_USER: $DB_USERNAME
            POSTGRES_PASSWORD: $DB_PASSWORD
    grafana:
        pull_policy: never
        build:
            dockerfile: containers/grafana/Dockerfile
        depends_on:
            - database
        ports:
            - "3000:3000"
        volumes:
            - grafana:/var/lib/grafana
        environment:
            GF_INSTANCE_NAME: phonehome
            GF_SECURITY_ADMIN_PASSWORD: phonehome
            PHONEHOME_HOST: $DB_HOST
            PHONEHOME_PORT: $DB_PORT
            PHONEHOME_DATABASE: $DB_DATABASE
            PHONEHOME_USERNAME: $GRAFANA_DATABASE_USERNAME
            PHONEHOME_PASSWORD: $GRAFANA_DATABASE_PASSWORD
    app:
        pull_policy: never
        build:
            dockerfile: containers/php/Dockerfile
            target: development
            args:
                UID: ${UID:-1000}
                GID: ${GID:-1000}
        hostname: app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        volumes: &app-volumes
            - .:/var/www/html
            - home:/home/www-data
    web:
        pull_policy: never
        build:
            dockerfile: containers/nginx/Dockerfile
        depends_on:
            - app
        volumes: *app-volumes
        ports:
            - "80:80"
        environment:
            FPM_URL: app
            FPM_PORT: 9000

    adminer:
        image: adminer:5.4.0
        ports:
            - "8080:8080"
        environment:
            ADMINER_DEFAULT_SERVER: database

    testing:
        profiles:
            - testing
        pull_policy: never
        build:
            dockerfile: containers/php/Dockerfile
            target: testing
            cache_from:
                - type=gha
        depends_on:
            database:
                condition: service_healthy
        secrets:
            -   source: env_file
                target: /var/www/html/.env
        environment:
            APP_ENV: testing
            APP_KEY: base64:jobMaruKa1iNGS74JK7PGywi5zGWdgIo0HoMG0B+hrY=

volumes:
    database: { }
    home: { }
    grafana: { }

secrets:
    env_file:
        file: .env
